---
import Link from "./Link.astro";

interface Props {
  classname?: string
}

const { classname } = Astro.props
const { pathname } = Astro.url

const capitalWords = ['API']; // more to come

let breadcrum = pathname.split('/')
  .filter(Boolean)
  .map(el => el.replaceAll('-', ' '))
  .map(el => {
    return !el.includes(' ') 
      ? el[0].toUpperCase() + el.substring(1)
      : el.split(' ').map(word => {
        if (capitalWords.includes(word.toUpperCase())) {
          return word.toUpperCase()
        }

        return word[0].toUpperCase() + word.substring(1)
      }).join(' ')
  })

const to = breadcrum
  .map((el, i) => el.replaceAll(' ', '-'))
  .map((el, i, arr) => i-1 > -1 ? (arr[i-1] + el).toLowerCase() : el.toLowerCase())

const style = `mt-12 ${ classname }`
---

<div class={ style }>
  <div class="max-w-3xl">
    { 
      breadcrum.map((bread, i) => (
        <span>
          {i-1 > -1 && <img src="/right.png" width="16px" class="inline mr-4"/>}
          <Link href={ '/' + to[i] } classname='hover:no-underline'>
            <p class={ i == to.length-1 ? "text-second text-sm font-bold inline mr-4" : "text-bright text-sm font-bold inline mr-4 hover:text-second" }>{ bread }</p>
          </Link>
        </span>
      ))
    }
  </div>
</div>