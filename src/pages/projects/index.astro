---
import Main from "@layouts/Main.astro"
import Section from "@layouts/Section.astro";
import Card from "@components/Card.astro";
import { getCollection, type CollectionEntry } from "astro:content";
import { MONTH } from "src/types/date";
import Portfolio from "@components/Portfolio.astro";
import workPortfolio from '@data/work-portfolio.json'

const projects = (await getCollection('projects')).sort((a: CollectionEntry<'projects'>, b: CollectionEntry<'projects'>) => {
  return b.data.projectFinish.setHours(0,0,0,0) - a.data.projectFinish.setHours(0,0,0,0)
})

const builtDate = projects.map(project => {
  const startMonth = project.data.projectStart.getMonth()
  const startYear = project.data.projectStart.getFullYear()
  const finishMonth = project.data.projectFinish.getMonth()
  const finishYear = project.data.projectFinish.getFullYear()

  const start = `${MONTH[startMonth]} ${startYear}`
  const finish = `${MONTH[finishMonth]} ${finishYear}`
  return start === finish ? start : `${start} - ${finish}`
})

---

<Main title='Thoriq Adillah - Projects' type="website" description="See Thoriq Adillah's projects during his college years">
	<Section emoji='ðŸš§' summary='' title="Projects That I Can Show Off" classname='mt-24'>
    <p class="text-white">
      Collection of projects that I have been working on or contributed to.
      Work portfolio are projects that I contributed to for my job.
      Personal projects are projects that I have been working on for fun or for my own learning.
    </p>
  </Section>
  <div class="flex gap-5 justify-center my-10">
    <button data-active="true" id="work-porto" class="transition-all duration-300 text-white px-4 py-2 rounded-full data-[active=true]:bg-second data-[active=true]:text-darker font-semibold">
      <p>Work Portfolio</p>
    </button>
    <button data-active="false" id="personal-project" class="transition-all duration-300 text-white px-4 py-2 rounded-full data-[active=true]:bg-second data-[active=true]:text-darker font-semibold">
      <p>Personal Projects</p>
    </button>
  </div>
  <div class='max-w-7xl mt-10 mx-auto px-4'>
    <div id="work-porto-container" data-active="true" class="flex flex-col gap-10 data-[active=false]:hidden">
      { workPortfolio.map(({ description, ...porto }) => (
        <Portfolio {...porto} image={`../${porto.image}`}>
          <p class="text-white">{description}</p>
        </Portfolio>
      ))}
    </div>
    <div id="personal-project-container" data-active="false" class="md:grid md:grid-cols-2 gap-5 lg:grid-cols-3 flex flex-col items-center data-[active=false]:hidden">
      { projects.map((project, i) => (
        <Card 
          title={ project.data.title } 
          tags={ project.data.tags } 
          href={ '/projects/' + project.slug } 
          stakeholder={ project.data.stakeholder } 
          builtDate={ builtDate[i] } 
          containsDemo={ project.data.containsDemo }
        >
          { project.data.description }
        </Card>
      ))}
    </div>
  </div>

  <script>
    const workPorto = document.getElementById('work-porto') as HTMLButtonElement
    const personalProject = document.getElementById('personal-project') as HTMLButtonElement

    const workPortoContainer = document.getElementById('work-porto-container') as HTMLDivElement
    const personalProjectContainer = document.getElementById('personal-project-container') as HTMLDivElement

    const queryParam = new URLSearchParams(window.location.search)

    function activatePorto(toggle: string) {
      if (toggle === 'work') {
        personalProject.dataset.active = 'false'
        workPorto.dataset.active = 'true'
        personalProjectContainer.dataset.active = 'false'
        workPortoContainer.dataset.active = 'true'
      } else if (toggle === 'personal') {
        personalProject.dataset.active = 'true'
        workPorto.dataset.active = 'false'
        personalProjectContainer.dataset.active = 'true'
        workPortoContainer.dataset.active = 'false'
      }
    }
    const toggle = queryParam.get('toggle')
    if (toggle) activatePorto(toggle)
    
    workPorto.onclick = () => {
      activatePorto('work')
      queryParam.set('toggle', 'work')
      window.history.pushState({}, '', window.location.pathname + '?' + queryParam.toString())
    }
    personalProject.onclick = () => {
      activatePorto('personal')
      queryParam.set('toggle', 'personal')
      window.history.pushState({}, '', window.location.pathname + '?' + queryParam.toString())
    }
  </script>
</Main>
